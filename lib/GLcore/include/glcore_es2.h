/* Generated by glcoregen v2 */
#pragma once

#include <GLES2/gl2.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Core GL API */
int glLoadFunctions(void);
void *nativeGetProcAddress(const char *proc);

/* OpenGL function prototypes */
#define APIENTRYP *

typedef void ( APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);
typedef void ( APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);
typedef void ( APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);
typedef void ( APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);
typedef void ( APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
typedef void ( APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
typedef void ( APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);
typedef void ( APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void ( APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);
typedef void ( APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);
typedef void ( APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);
typedef void ( APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void ( APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, GLenum usage);
typedef void ( APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
typedef GLenum ( APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
typedef void ( APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);
typedef void ( APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void ( APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);
typedef void ( APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);
typedef void ( APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void ( APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);
typedef void ( APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
typedef void ( APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
typedef void ( APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void ( APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef GLuint ( APIENTRYP PFNGLCREATEPROGRAMPROC) (void);
typedef GLuint ( APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);
typedef void ( APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);
typedef void ( APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);
typedef void ( APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
typedef void ( APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);
typedef void ( APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
typedef void ( APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);
typedef void ( APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);
typedef void ( APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);
typedef void ( APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);
typedef void ( APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
typedef void ( APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);
typedef void ( APIENTRYP PFNGLDISABLEPROC) (GLenum cap);
typedef void ( APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);
typedef void ( APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);
typedef void ( APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices);
typedef void ( APIENTRYP PFNGLENABLEPROC) (GLenum cap);
typedef void ( APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);
typedef void ( APIENTRYP PFNGLFINISHPROC) (void);
typedef void ( APIENTRYP PFNGLFLUSHPROC) (void);
typedef void ( APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void ( APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void ( APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);
typedef void ( APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);
typedef void ( APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);
typedef void ( APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
typedef void ( APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
typedef void ( APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);
typedef void ( APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
typedef void ( APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
typedef void ( APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
typedef GLint ( APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);
typedef void ( APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *data);
typedef void ( APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef GLenum ( APIENTRYP PFNGLGETERRORPROC) (void);
typedef void ( APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *data);
typedef void ( APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
typedef void ( APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *data);
typedef void ( APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);
typedef void ( APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void ( APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void ( APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);
typedef void ( APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void ( APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
typedef void ( APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
typedef const GLubyte *( APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);
typedef void ( APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void ( APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void ( APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);
typedef void ( APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);
typedef GLint ( APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);
typedef void ( APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);
typedef void ( APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);
typedef void ( APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **pointer);
typedef void ( APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);
typedef GLboolean ( APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);
typedef GLboolean ( APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);
typedef GLboolean ( APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);
typedef GLboolean ( APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);
typedef GLboolean ( APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);
typedef GLboolean ( APIENTRYP PFNGLISSHADERPROC) (GLuint shader);
typedef GLboolean ( APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);
typedef void ( APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);
typedef void ( APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);
typedef void ( APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);
typedef void ( APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);
typedef void ( APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
typedef void ( APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);
typedef void ( APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void ( APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);
typedef void ( APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);
typedef void ( APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
typedef void ( APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
typedef void ( APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);
typedef void ( APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void ( APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);
typedef void ( APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);
typedef void ( APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);
typedef void ( APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void ( APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void ( APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);
typedef void ( APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void ( APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);
typedef void ( APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void ( APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
typedef void ( APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);
typedef void ( APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void ( APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);
typedef void ( APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void ( APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);
typedef void ( APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void ( APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);
typedef void ( APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void ( APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void ( APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void ( APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);
typedef void ( APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void ( APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void ( APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void ( APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void ( APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void ( APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void ( APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void ( APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void ( APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);
typedef void ( APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);
typedef void ( APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);
typedef void ( APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);
typedef void ( APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);
typedef void ( APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);
typedef void ( APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void ( APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);
typedef void ( APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void ( APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);
typedef void ( APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
typedef void ( APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);

/* OpenGL functions*/
extern PFNGLACTIVETEXTUREPROC _glActiveTexture;
extern PFNGLATTACHSHADERPROC _glAttachShader;
extern PFNGLBINDATTRIBLOCATIONPROC _glBindAttribLocation;
extern PFNGLBINDBUFFERPROC _glBindBuffer;
extern PFNGLBINDFRAMEBUFFERPROC _glBindFramebuffer;
extern PFNGLBINDRENDERBUFFERPROC _glBindRenderbuffer;
extern PFNGLBINDTEXTUREPROC _glBindTexture;
extern PFNGLBLENDCOLORPROC _glBlendColor;
extern PFNGLBLENDEQUATIONPROC _glBlendEquation;
extern PFNGLBLENDEQUATIONSEPARATEPROC _glBlendEquationSeparate;
extern PFNGLBLENDFUNCPROC _glBlendFunc;
extern PFNGLBLENDFUNCSEPARATEPROC _glBlendFuncSeparate;
extern PFNGLBUFFERDATAPROC _glBufferData;
extern PFNGLBUFFERSUBDATAPROC _glBufferSubData;
extern PFNGLCHECKFRAMEBUFFERSTATUSPROC _glCheckFramebufferStatus;
extern PFNGLCLEARPROC _glClear;
extern PFNGLCLEARCOLORPROC _glClearColor;
extern PFNGLCLEARDEPTHFPROC _glClearDepthf;
extern PFNGLCLEARSTENCILPROC _glClearStencil;
extern PFNGLCOLORMASKPROC _glColorMask;
extern PFNGLCOMPILESHADERPROC _glCompileShader;
extern PFNGLCOMPRESSEDTEXIMAGE2DPROC _glCompressedTexImage2D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC _glCompressedTexSubImage2D;
extern PFNGLCOPYTEXIMAGE2DPROC _glCopyTexImage2D;
extern PFNGLCOPYTEXSUBIMAGE2DPROC _glCopyTexSubImage2D;
extern PFNGLCREATEPROGRAMPROC _glCreateProgram;
extern PFNGLCREATESHADERPROC _glCreateShader;
extern PFNGLCULLFACEPROC _glCullFace;
extern PFNGLDELETEBUFFERSPROC _glDeleteBuffers;
extern PFNGLDELETEFRAMEBUFFERSPROC _glDeleteFramebuffers;
extern PFNGLDELETEPROGRAMPROC _glDeleteProgram;
extern PFNGLDELETERENDERBUFFERSPROC _glDeleteRenderbuffers;
extern PFNGLDELETESHADERPROC _glDeleteShader;
extern PFNGLDELETETEXTURESPROC _glDeleteTextures;
extern PFNGLDEPTHFUNCPROC _glDepthFunc;
extern PFNGLDEPTHMASKPROC _glDepthMask;
extern PFNGLDEPTHRANGEFPROC _glDepthRangef;
extern PFNGLDETACHSHADERPROC _glDetachShader;
extern PFNGLDISABLEPROC _glDisable;
extern PFNGLDISABLEVERTEXATTRIBARRAYPROC _glDisableVertexAttribArray;
extern PFNGLDRAWARRAYSPROC _glDrawArrays;
extern PFNGLDRAWELEMENTSPROC _glDrawElements;
extern PFNGLENABLEPROC _glEnable;
extern PFNGLENABLEVERTEXATTRIBARRAYPROC _glEnableVertexAttribArray;
extern PFNGLFINISHPROC _glFinish;
extern PFNGLFLUSHPROC _glFlush;
extern PFNGLFRAMEBUFFERRENDERBUFFERPROC _glFramebufferRenderbuffer;
extern PFNGLFRAMEBUFFERTEXTURE2DPROC _glFramebufferTexture2D;
extern PFNGLFRONTFACEPROC _glFrontFace;
extern PFNGLGENBUFFERSPROC _glGenBuffers;
extern PFNGLGENERATEMIPMAPPROC _glGenerateMipmap;
extern PFNGLGENFRAMEBUFFERSPROC _glGenFramebuffers;
extern PFNGLGENRENDERBUFFERSPROC _glGenRenderbuffers;
extern PFNGLGENTEXTURESPROC _glGenTextures;
extern PFNGLGETACTIVEATTRIBPROC _glGetActiveAttrib;
extern PFNGLGETACTIVEUNIFORMPROC _glGetActiveUniform;
extern PFNGLGETATTACHEDSHADERSPROC _glGetAttachedShaders;
extern PFNGLGETATTRIBLOCATIONPROC _glGetAttribLocation;
extern PFNGLGETBOOLEANVPROC _glGetBooleanv;
extern PFNGLGETBUFFERPARAMETERIVPROC _glGetBufferParameteriv;
extern PFNGLGETERRORPROC _glGetError;
extern PFNGLGETFLOATVPROC _glGetFloatv;
extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC _glGetFramebufferAttachmentParameteriv;
extern PFNGLGETINTEGERVPROC _glGetIntegerv;
extern PFNGLGETPROGRAMIVPROC _glGetProgramiv;
extern PFNGLGETPROGRAMINFOLOGPROC _glGetProgramInfoLog;
extern PFNGLGETRENDERBUFFERPARAMETERIVPROC _glGetRenderbufferParameteriv;
extern PFNGLGETSHADERIVPROC _glGetShaderiv;
extern PFNGLGETSHADERINFOLOGPROC _glGetShaderInfoLog;
extern PFNGLGETSHADERPRECISIONFORMATPROC _glGetShaderPrecisionFormat;
extern PFNGLGETSHADERSOURCEPROC _glGetShaderSource;
extern PFNGLGETSTRINGPROC _glGetString;
extern PFNGLGETTEXPARAMETERFVPROC _glGetTexParameterfv;
extern PFNGLGETTEXPARAMETERIVPROC _glGetTexParameteriv;
extern PFNGLGETUNIFORMFVPROC _glGetUniformfv;
extern PFNGLGETUNIFORMIVPROC _glGetUniformiv;
extern PFNGLGETUNIFORMLOCATIONPROC _glGetUniformLocation;
extern PFNGLGETVERTEXATTRIBFVPROC _glGetVertexAttribfv;
extern PFNGLGETVERTEXATTRIBIVPROC _glGetVertexAttribiv;
extern PFNGLGETVERTEXATTRIBPOINTERVPROC _glGetVertexAttribPointerv;
extern PFNGLHINTPROC _glHint;
extern PFNGLISBUFFERPROC _glIsBuffer;
extern PFNGLISENABLEDPROC _glIsEnabled;
extern PFNGLISFRAMEBUFFERPROC _glIsFramebuffer;
extern PFNGLISPROGRAMPROC _glIsProgram;
extern PFNGLISRENDERBUFFERPROC _glIsRenderbuffer;
extern PFNGLISSHADERPROC _glIsShader;
extern PFNGLISTEXTUREPROC _glIsTexture;
extern PFNGLLINEWIDTHPROC _glLineWidth;
extern PFNGLLINKPROGRAMPROC _glLinkProgram;
extern PFNGLPIXELSTOREIPROC _glPixelStorei;
extern PFNGLPOLYGONOFFSETPROC _glPolygonOffset;
extern PFNGLREADPIXELSPROC _glReadPixels;
extern PFNGLRELEASESHADERCOMPILERPROC _glReleaseShaderCompiler;
extern PFNGLRENDERBUFFERSTORAGEPROC _glRenderbufferStorage;
extern PFNGLSAMPLECOVERAGEPROC _glSampleCoverage;
extern PFNGLSCISSORPROC _glScissor;
extern PFNGLSHADERBINARYPROC _glShaderBinary;
extern PFNGLSHADERSOURCEPROC _glShaderSource;
extern PFNGLSTENCILFUNCPROC _glStencilFunc;
extern PFNGLSTENCILFUNCSEPARATEPROC _glStencilFuncSeparate;
extern PFNGLSTENCILMASKPROC _glStencilMask;
extern PFNGLSTENCILMASKSEPARATEPROC _glStencilMaskSeparate;
extern PFNGLSTENCILOPPROC _glStencilOp;
extern PFNGLSTENCILOPSEPARATEPROC _glStencilOpSeparate;
extern PFNGLTEXIMAGE2DPROC _glTexImage2D;
extern PFNGLTEXPARAMETERFPROC _glTexParameterf;
extern PFNGLTEXPARAMETERFVPROC _glTexParameterfv;
extern PFNGLTEXPARAMETERIPROC _glTexParameteri;
extern PFNGLTEXPARAMETERIVPROC _glTexParameteriv;
extern PFNGLTEXSUBIMAGE2DPROC _glTexSubImage2D;
extern PFNGLUNIFORM1FPROC _glUniform1f;
extern PFNGLUNIFORM1FVPROC _glUniform1fv;
extern PFNGLUNIFORM1IPROC _glUniform1i;
extern PFNGLUNIFORM1IVPROC _glUniform1iv;
extern PFNGLUNIFORM2FPROC _glUniform2f;
extern PFNGLUNIFORM2FVPROC _glUniform2fv;
extern PFNGLUNIFORM2IPROC _glUniform2i;
extern PFNGLUNIFORM2IVPROC _glUniform2iv;
extern PFNGLUNIFORM3FPROC _glUniform3f;
extern PFNGLUNIFORM3FVPROC _glUniform3fv;
extern PFNGLUNIFORM3IPROC _glUniform3i;
extern PFNGLUNIFORM3IVPROC _glUniform3iv;
extern PFNGLUNIFORM4FPROC _glUniform4f;
extern PFNGLUNIFORM4FVPROC _glUniform4fv;
extern PFNGLUNIFORM4IPROC _glUniform4i;
extern PFNGLUNIFORM4IVPROC _glUniform4iv;
extern PFNGLUNIFORMMATRIX2FVPROC _glUniformMatrix2fv;
extern PFNGLUNIFORMMATRIX3FVPROC _glUniformMatrix3fv;
extern PFNGLUNIFORMMATRIX4FVPROC _glUniformMatrix4fv;
extern PFNGLUSEPROGRAMPROC _glUseProgram;
extern PFNGLVALIDATEPROGRAMPROC _glValidateProgram;
extern PFNGLVERTEXATTRIB1FPROC _glVertexAttrib1f;
extern PFNGLVERTEXATTRIB1FVPROC _glVertexAttrib1fv;
extern PFNGLVERTEXATTRIB2FPROC _glVertexAttrib2f;
extern PFNGLVERTEXATTRIB2FVPROC _glVertexAttrib2fv;
extern PFNGLVERTEXATTRIB3FPROC _glVertexAttrib3f;
extern PFNGLVERTEXATTRIB3FVPROC _glVertexAttrib3fv;
extern PFNGLVERTEXATTRIB4FPROC _glVertexAttrib4f;
extern PFNGLVERTEXATTRIB4FVPROC _glVertexAttrib4fv;
extern PFNGLVERTEXATTRIBPOINTERPROC _glVertexAttribPointer;
extern PFNGLVIEWPORTPROC _glViewport;
#define glActiveTexture _glActiveTexture
#define glAttachShader _glAttachShader
#define glBindAttribLocation _glBindAttribLocation
#define glBindBuffer _glBindBuffer
#define glBindFramebuffer _glBindFramebuffer
#define glBindRenderbuffer _glBindRenderbuffer
#define glBindTexture _glBindTexture
#define glBlendColor _glBlendColor
#define glBlendEquation _glBlendEquation
#define glBlendEquationSeparate _glBlendEquationSeparate
#define glBlendFunc _glBlendFunc
#define glBlendFuncSeparate _glBlendFuncSeparate
#define glBufferData _glBufferData
#define glBufferSubData _glBufferSubData
#define glCheckFramebufferStatus _glCheckFramebufferStatus
#define glClear _glClear
#define glClearColor _glClearColor
#define glClearDepthf _glClearDepthf
#define glClearStencil _glClearStencil
#define glColorMask _glColorMask
#define glCompileShader _glCompileShader
#define glCompressedTexImage2D _glCompressedTexImage2D
#define glCompressedTexSubImage2D _glCompressedTexSubImage2D
#define glCopyTexImage2D _glCopyTexImage2D
#define glCopyTexSubImage2D _glCopyTexSubImage2D
#define glCreateProgram _glCreateProgram
#define glCreateShader _glCreateShader
#define glCullFace _glCullFace
#define glDeleteBuffers _glDeleteBuffers
#define glDeleteFramebuffers _glDeleteFramebuffers
#define glDeleteProgram _glDeleteProgram
#define glDeleteRenderbuffers _glDeleteRenderbuffers
#define glDeleteShader _glDeleteShader
#define glDeleteTextures _glDeleteTextures
#define glDepthFunc _glDepthFunc
#define glDepthMask _glDepthMask
#define glDepthRangef _glDepthRangef
#define glDetachShader _glDetachShader
#define glDisable _glDisable
#define glDisableVertexAttribArray _glDisableVertexAttribArray
#define glDrawArrays _glDrawArrays
#define glDrawElements _glDrawElements
#define glEnable _glEnable
#define glEnableVertexAttribArray _glEnableVertexAttribArray
#define glFinish _glFinish
#define glFlush _glFlush
#define glFramebufferRenderbuffer _glFramebufferRenderbuffer
#define glFramebufferTexture2D _glFramebufferTexture2D
#define glFrontFace _glFrontFace
#define glGenBuffers _glGenBuffers
#define glGenerateMipmap _glGenerateMipmap
#define glGenFramebuffers _glGenFramebuffers
#define glGenRenderbuffers _glGenRenderbuffers
#define glGenTextures _glGenTextures
#define glGetActiveAttrib _glGetActiveAttrib
#define glGetActiveUniform _glGetActiveUniform
#define glGetAttachedShaders _glGetAttachedShaders
#define glGetAttribLocation _glGetAttribLocation
#define glGetBooleanv _glGetBooleanv
#define glGetBufferParameteriv _glGetBufferParameteriv
#define glGetError _glGetError
#define glGetFloatv _glGetFloatv
#define glGetFramebufferAttachmentParameteriv _glGetFramebufferAttachmentParameteriv
#define glGetIntegerv _glGetIntegerv
#define glGetProgramiv _glGetProgramiv
#define glGetProgramInfoLog _glGetProgramInfoLog
#define glGetRenderbufferParameteriv _glGetRenderbufferParameteriv
#define glGetShaderiv _glGetShaderiv
#define glGetShaderInfoLog _glGetShaderInfoLog
#define glGetShaderPrecisionFormat _glGetShaderPrecisionFormat
#define glGetShaderSource _glGetShaderSource
#define glGetString _glGetString
#define glGetTexParameterfv _glGetTexParameterfv
#define glGetTexParameteriv _glGetTexParameteriv
#define glGetUniformfv _glGetUniformfv
#define glGetUniformiv _glGetUniformiv
#define glGetUniformLocation _glGetUniformLocation
#define glGetVertexAttribfv _glGetVertexAttribfv
#define glGetVertexAttribiv _glGetVertexAttribiv
#define glGetVertexAttribPointerv _glGetVertexAttribPointerv
#define glHint _glHint
#define glIsBuffer _glIsBuffer
#define glIsEnabled _glIsEnabled
#define glIsFramebuffer _glIsFramebuffer
#define glIsProgram _glIsProgram
#define glIsRenderbuffer _glIsRenderbuffer
#define glIsShader _glIsShader
#define glIsTexture _glIsTexture
#define glLineWidth _glLineWidth
#define glLinkProgram _glLinkProgram
#define glPixelStorei _glPixelStorei
#define glPolygonOffset _glPolygonOffset
#define glReadPixels _glReadPixels
#define glReleaseShaderCompiler _glReleaseShaderCompiler
#define glRenderbufferStorage _glRenderbufferStorage
#define glSampleCoverage _glSampleCoverage
#define glScissor _glScissor
#define glShaderBinary _glShaderBinary
#define glShaderSource _glShaderSource
#define glStencilFunc _glStencilFunc
#define glStencilFuncSeparate _glStencilFuncSeparate
#define glStencilMask _glStencilMask
#define glStencilMaskSeparate _glStencilMaskSeparate
#define glStencilOp _glStencilOp
#define glStencilOpSeparate _glStencilOpSeparate
#define glTexImage2D _glTexImage2D
#define glTexParameterf _glTexParameterf
#define glTexParameterfv _glTexParameterfv
#define glTexParameteri _glTexParameteri
#define glTexParameteriv _glTexParameteriv
#define glTexSubImage2D _glTexSubImage2D
#define glUniform1f _glUniform1f
#define glUniform1fv _glUniform1fv
#define glUniform1i _glUniform1i
#define glUniform1iv _glUniform1iv
#define glUniform2f _glUniform2f
#define glUniform2fv _glUniform2fv
#define glUniform2i _glUniform2i
#define glUniform2iv _glUniform2iv
#define glUniform3f _glUniform3f
#define glUniform3fv _glUniform3fv
#define glUniform3i _glUniform3i
#define glUniform3iv _glUniform3iv
#define glUniform4f _glUniform4f
#define glUniform4fv _glUniform4fv
#define glUniform4i _glUniform4i
#define glUniform4iv _glUniform4iv
#define glUniformMatrix2fv _glUniformMatrix2fv
#define glUniformMatrix3fv _glUniformMatrix3fv
#define glUniformMatrix4fv _glUniformMatrix4fv
#define glUseProgram _glUseProgram
#define glValidateProgram _glValidateProgram
#define glVertexAttrib1f _glVertexAttrib1f
#define glVertexAttrib1fv _glVertexAttrib1fv
#define glVertexAttrib2f _glVertexAttrib2f
#define glVertexAttrib2fv _glVertexAttrib2fv
#define glVertexAttrib3f _glVertexAttrib3f
#define glVertexAttrib3fv _glVertexAttrib3fv
#define glVertexAttrib4f _glVertexAttrib4f
#define glVertexAttrib4fv _glVertexAttrib4fv
#define glVertexAttribPointer _glVertexAttribPointer
#define glViewport _glViewport

#ifdef __cplusplus
}
#endif

